---
import { Image } from "astro:assets"
import type { CollectionEntry } from "astro:content"
import { getPostUrl } from "content/config"

interface Props {
	posts: CollectionEntry<"posts">[]
	compact?: boolean
}
const { posts, compact } = Astro.props
---

<ul
	class:list={[
		"flex flex-col",
		{
			"gap-4": !compact,
			"gap-2": compact,
		},
	]}
>
	{
		posts
			.sort((a, b) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime())
			.map((post) => (
				<li>
					<a
						href={getPostUrl(post)}
						class="group flex max-h-[150px] max-w-[700px] items-start gap-2 rounded-xl bg-accent-2 px-4 py-3 transition-colors hover:bg-accent-3 lg:items-center"
					>
						{compact ? (
							<Image
								src={post.data.image.url}
								alt={post.data.image.alt}
								class="h-[50px] w-[50px] rounded-sm object-cover"
								inferSize
							/>
						) : (
							<>
								<Image
									src={post.data.image.url}
									alt={post.data.image.alt}
									class="hidden rounded-md transition-all group-hover:contrast-125 lg:block"
									width={150}
									height={90}
									inferSize
								/>
								<Image
									src={post.data.image.url}
									alt={post.data.image.alt}
									class="mt-2 block rounded-sm transition-all group-hover:contrast-125 lg:hidden"
									width={50}
									inferSize
								/>
							</>
						)}
						<div class="flex flex-col pl-2">
							<h2
								class:list={[
									"font-rubik font-bold transition-colors group-hover:text-accent-11",
									{
										"text-xl lg:text-2xl": !compact,
									},
								]}
							>
								{post.data.title}
							</h2>
							{compact ? null : (
								<p class="hidden max-w-screen-md text-sm text-neutral-11 lg:block">
									{post.data.description}
								</p>
							)}
						</div>
					</a>
				</li>
			))
	}
</ul>
