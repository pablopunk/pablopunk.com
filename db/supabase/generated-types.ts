/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/i18n": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.i18n.id"];
          created_at?: parameters["rowFilter.i18n.created_at"];
          locale?: parameters["rowFilter.i18n.locale"];
          key?: parameters["rowFilter.i18n.key"];
          value?: parameters["rowFilter.i18n.value"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["i18n"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** i18n */
          i18n?: definitions["i18n"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.i18n.id"];
          created_at?: parameters["rowFilter.i18n.created_at"];
          locale?: parameters["rowFilter.i18n.locale"];
          key?: parameters["rowFilter.i18n.key"];
          value?: parameters["rowFilter.i18n.value"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.i18n.id"];
          created_at?: parameters["rowFilter.i18n.created_at"];
          locale?: parameters["rowFilter.i18n.locale"];
          key?: parameters["rowFilter.i18n.key"];
          value?: parameters["rowFilter.i18n.value"];
        };
        body: {
          /** i18n */
          i18n?: definitions["i18n"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/likes": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.likes.id"];
          slug?: parameters["rowFilter.likes.slug"];
          ip?: parameters["rowFilter.likes.ip"];
          inserted_at?: parameters["rowFilter.likes.inserted_at"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["likes"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** likes */
          likes?: definitions["likes"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.likes.id"];
          slug?: parameters["rowFilter.likes.slug"];
          ip?: parameters["rowFilter.likes.ip"];
          inserted_at?: parameters["rowFilter.likes.inserted_at"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.likes.id"];
          slug?: parameters["rowFilter.likes.slug"];
          ip?: parameters["rowFilter.likes.ip"];
          inserted_at?: parameters["rowFilter.likes.inserted_at"];
        };
        body: {
          /** likes */
          likes?: definitions["likes"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/lurdle_solutions": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.lurdle_solutions.id"];
          day?: parameters["rowFilter.lurdle_solutions.day"];
          word?: parameters["rowFilter.lurdle_solutions.word"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["lurdle_solutions"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** lurdle_solutions */
          lurdle_solutions?: definitions["lurdle_solutions"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.lurdle_solutions.id"];
          day?: parameters["rowFilter.lurdle_solutions.day"];
          word?: parameters["rowFilter.lurdle_solutions.word"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.lurdle_solutions.id"];
          day?: parameters["rowFilter.lurdle_solutions.day"];
          word?: parameters["rowFilter.lurdle_solutions.word"];
        };
        body: {
          /** lurdle_solutions */
          lurdle_solutions?: definitions["lurdle_solutions"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/realtime_clicks": {
    get: {
      parameters: {
        query: {
          type?: parameters["rowFilter.realtime_clicks.type"];
          id?: parameters["rowFilter.realtime_clicks.id"];
          inserted_at?: parameters["rowFilter.realtime_clicks.inserted_at"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["realtime_clicks"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** realtime_clicks */
          realtime_clicks?: definitions["realtime_clicks"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          type?: parameters["rowFilter.realtime_clicks.type"];
          id?: parameters["rowFilter.realtime_clicks.id"];
          inserted_at?: parameters["rowFilter.realtime_clicks.inserted_at"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          type?: parameters["rowFilter.realtime_clicks.type"];
          id?: parameters["rowFilter.realtime_clicks.id"];
          inserted_at?: parameters["rowFilter.realtime_clicks.inserted_at"];
        };
        body: {
          /** realtime_clicks */
          realtime_clicks?: definitions["realtime_clicks"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/translation_requests": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.translation_requests.id"];
          slug?: parameters["rowFilter.translation_requests.slug"];
          ip?: parameters["rowFilter.translation_requests.ip"];
          inserted_at?: parameters["rowFilter.translation_requests.inserted_at"];
          guessed_country?: parameters["rowFilter.translation_requests.guessed_country"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["translation_requests"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** translation_requests */
          translation_requests?: definitions["translation_requests"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.translation_requests.id"];
          slug?: parameters["rowFilter.translation_requests.slug"];
          ip?: parameters["rowFilter.translation_requests.ip"];
          inserted_at?: parameters["rowFilter.translation_requests.inserted_at"];
          guessed_country?: parameters["rowFilter.translation_requests.guessed_country"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.translation_requests.id"];
          slug?: parameters["rowFilter.translation_requests.slug"];
          ip?: parameters["rowFilter.translation_requests.ip"];
          inserted_at?: parameters["rowFilter.translation_requests.inserted_at"];
          guessed_country?: parameters["rowFilter.translation_requests.guessed_country"];
        };
        body: {
          /** translation_requests */
          translation_requests?: definitions["translation_requests"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/url_redirects": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.url_redirects.id"];
          from?: parameters["rowFilter.url_redirects.from"];
          to?: parameters["rowFilter.url_redirects.to"];
          user_id?: parameters["rowFilter.url_redirects.user_id"];
          updated_at?: parameters["rowFilter.url_redirects.updated_at"];
          created_at?: parameters["rowFilter.url_redirects.created_at"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["url_redirects"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** url_redirects */
          url_redirects?: definitions["url_redirects"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.url_redirects.id"];
          from?: parameters["rowFilter.url_redirects.from"];
          to?: parameters["rowFilter.url_redirects.to"];
          user_id?: parameters["rowFilter.url_redirects.user_id"];
          updated_at?: parameters["rowFilter.url_redirects.updated_at"];
          created_at?: parameters["rowFilter.url_redirects.created_at"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.url_redirects.id"];
          from?: parameters["rowFilter.url_redirects.from"];
          to?: parameters["rowFilter.url_redirects.to"];
          user_id?: parameters["rowFilter.url_redirects.user_id"];
          updated_at?: parameters["rowFilter.url_redirects.updated_at"];
          created_at?: parameters["rowFilter.url_redirects.created_at"];
        };
        body: {
          /** url_redirects */
          url_redirects?: definitions["url_redirects"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  /** @description Translations for pablopunk.com */
  i18n: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: character varying
     * @default en
     */
    locale: string;
    /** Format: character varying */
    key: string;
    /** Format: character varying */
    value?: string;
  };
  likes: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: text */
    slug?: string;
    /** Format: text */
    ip?: string;
    /**
     * Format: timestamp without time zone
     * @default now()
     */
    inserted_at?: string;
  };
  lurdle_solutions: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: date */
    day?: string;
    /** Format: character varying */
    word?: string;
  };
  /** @description realtime.pablopunk.com */
  realtime_clicks: {
    /** Format: text */
    type?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp without time zone
     * @default now()
     */
    inserted_at?: string;
  };
  translation_requests: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: character varying */
    slug: string;
    /** Format: character varying */
    ip?: string;
    /**
     * Format: timestamp without time zone
     * @default now()
     */
    inserted_at?: string;
    /** Format: character varying */
    guessed_country?: string;
  };
  /** @description pablo.im */
  url_redirects: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: text */
    from?: string;
    /** Format: text */
    to?: string;
    /** Format: text */
    user_id?: string;
    /** Format: timestamp without time zone */
    updated_at?: string;
    /**
     * Format: timestamp without time zone
     * @default now()
     */
    created_at?: string;
  };
}

export interface parameters {
  /** @description Preference */
  preferParams: "params=single-object";
  /** @description Preference */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /** @description Preference */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description i18n */
  "body.i18n": definitions["i18n"];
  /** Format: bigint */
  "rowFilter.i18n.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.i18n.created_at": string;
  /** Format: character varying */
  "rowFilter.i18n.locale": string;
  /** Format: character varying */
  "rowFilter.i18n.key": string;
  /** Format: character varying */
  "rowFilter.i18n.value": string;
  /** @description likes */
  "body.likes": definitions["likes"];
  /** Format: bigint */
  "rowFilter.likes.id": string;
  /** Format: text */
  "rowFilter.likes.slug": string;
  /** Format: text */
  "rowFilter.likes.ip": string;
  /** Format: timestamp without time zone */
  "rowFilter.likes.inserted_at": string;
  /** @description lurdle_solutions */
  "body.lurdle_solutions": definitions["lurdle_solutions"];
  /** Format: bigint */
  "rowFilter.lurdle_solutions.id": string;
  /** Format: date */
  "rowFilter.lurdle_solutions.day": string;
  /** Format: character varying */
  "rowFilter.lurdle_solutions.word": string;
  /** @description realtime_clicks */
  "body.realtime_clicks": definitions["realtime_clicks"];
  /** Format: text */
  "rowFilter.realtime_clicks.type": string;
  /** Format: bigint */
  "rowFilter.realtime_clicks.id": string;
  /** Format: timestamp without time zone */
  "rowFilter.realtime_clicks.inserted_at": string;
  /** @description translation_requests */
  "body.translation_requests": definitions["translation_requests"];
  /** Format: bigint */
  "rowFilter.translation_requests.id": string;
  /** Format: character varying */
  "rowFilter.translation_requests.slug": string;
  /** Format: character varying */
  "rowFilter.translation_requests.ip": string;
  /** Format: timestamp without time zone */
  "rowFilter.translation_requests.inserted_at": string;
  /** Format: character varying */
  "rowFilter.translation_requests.guessed_country": string;
  /** @description url_redirects */
  "body.url_redirects": definitions["url_redirects"];
  /** Format: bigint */
  "rowFilter.url_redirects.id": string;
  /** Format: text */
  "rowFilter.url_redirects.from": string;
  /** Format: text */
  "rowFilter.url_redirects.to": string;
  /** Format: text */
  "rowFilter.url_redirects.user_id": string;
  /** Format: timestamp without time zone */
  "rowFilter.url_redirects.updated_at": string;
  /** Format: timestamp without time zone */
  "rowFilter.url_redirects.created_at": string;
}

export interface operations {}

export interface external {}
